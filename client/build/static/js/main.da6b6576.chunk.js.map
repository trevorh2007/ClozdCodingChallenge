{"version":3,"sources":["components/nav-bar/navbar.js","components/no-page-found/nopagefound.js","components/user-list/userlist.js","components/home/home.js","components/about/about.js","components/user-details/userdetails.js","router.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","Navbar","bg","variant","expand","className","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NoPageFound","UserList","props","useState","dataPage","setDataPage","isFetching","setIsFetching","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","a","axios","get","params","page","results","seed","response","setUserData","data","useEffect","fetchUsers","addEventListener","removeEventListener","fetchMoreUsers","map","user","index","setLinkProps","key","Row","Col","md","name","first","last","email","location","city","country","Home","About","UserDetails","userId","userData","fullAddress","street","number","state","postcode","Card","Img","src","picture","large","Body","Title","ListGroup","ListGroupItem","phone","cell","moment","dob","date","format","routes","App","routeResult","useRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.da6b6576.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport './navbar.css'\r\n\r\nconst NavigationBar = () => {\r\n    return(\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"mb-3\" sticky=\"top\">\r\n        <Navbar.Brand href=\"/\">Clozd Coding Challenge</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/about\">About</Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\n\r\nconst NoPageFound = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"text-center\">\r\n                404 Page Not Found\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoPageFound;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport './userlist.css'\r\nimport {A, setLinkProps} from 'hookrouter'\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\nconst UserList = (props) => {\r\n    const [dataPage, setDataPage] = useState(1)\r\n    const [isFetching, setIsFetching] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            const response = await axios.get('/api/v1/users', {\r\n                params: {\r\n                    page: dataPage,\r\n                    results: 50,\r\n                    seed: 'abc'\r\n                }\r\n            })\r\n            props.setUserData(response.data)\r\n            setDataPage(dataPage => dataPage + 1)\r\n        }\r\n        fetchUsers()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, [])\r\n\r\n    function handleScroll() {\r\n        if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\r\n        setIsFetching(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isFetching) return;\r\n        fetchMoreUsers();\r\n      }, [isFetching]);\r\n\r\n    async function fetchMoreUsers() {\r\n        setDataPage(dataPage => dataPage + 1)\r\n        const response = await axios.get(`/api/v1/users`, {\r\n            params: {\r\n                page: dataPage,\r\n                results: 50,\r\n                seed: 'abc'\r\n            }\r\n        })\r\n        props.setUserData(data => [...data, ...response.data])\r\n        setIsFetching(false);\r\n    }\r\n  \r\n    return (\r\n        <>\r\n        <ul className=\"list-group mb-2\">\r\n            {props.data ? props.data.map((user, index) => (\r\n                <A {...setLinkProps({href: `/user/${index}`, data: user })} key={index}>\r\n                    <li className=\"list-group-item\" key={index}>\r\n                        <Row>\r\n                            <Col md=\"auto\">\r\n                                {index + 1}.\r\n                            </Col>\r\n                            <Col md=\"auto\">\r\n                                {\r\n                                    `Name: ${user.name.first + ' ' + user.name.last}\r\n                                    Email: ${user.email}\r\n                                    City/Country: ${user.location.city}, ${user.location.country} `\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </li>\r\n                </A>\r\n            )) : ''}\r\n            {isFetching && 'Fetching more users...'}\r\n        </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserList;","import React from 'react';\r\nimport UserList from '../user-list/userlist'\r\n\r\nconst Home = (props) => {\r\n    return(\r\n        <div className=\"container\">\r\n            <UserList data= {props.data} setUserData={props.setUserData}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <p>\r\n                Cool little application built as part of a coding challenge for Clozd.\r\n            </p>\r\n            <p>\r\n                Features:\r\n                <ul>\r\n                    <li>\r\n                        NodeJS backend with ReactJS frontend\r\n                    </li>\r\n                    <li>\r\n                        Randomuser.me API integration\r\n                    </li>\r\n                    <li>\r\n                        Infinite scroll on home page to obtain mentioned API data\r\n                    </li>\r\n                    <li>\r\n                        Use of 'hookrouter' for react routing purposes (lightweight alternative to react-router)\r\n                    </li>\r\n                    <li>\r\n                        React-bootstrap for quick styles\r\n                    </li>\r\n                </ul>\r\n            </p>\r\n            <p>\r\n                Fun TODO's:\r\n                <ul>\r\n                    <li>Add history to 'hookrouter' and infinite scroll scroll position for better UX when using back buttons from user details page </li>\r\n                    <li>Unit tests, front/back end</li>\r\n                    <li>Currently not using react-router easily loses data on refresh for user/:id, data is transferred from home page to the user details page. Find a fix for this using hookrouter and either it's \"history\" or use localstorage for refresh data.</li>\r\n                    <li>The route for user/:id doesn't take in account of the 0 index position, quick fix wouldn't take long (example: route 'user/1' is actually user 2)</li>\r\n                </ul>\r\n            </p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default About;","import React, {useEffect, useState} from 'react'\r\nimport {Card, ListGroup, ListGroupItem} from 'react-bootstrap'\r\nimport { FaPhone, FaEnvelope, FaAddressCard, FaBirthdayCake } from 'react-icons/fa'\r\nimport moment from 'moment'\r\nimport './userdetails.css'\r\n\r\nconst UserDetails = (props) => {\r\n    const [userData] = useState(props.user[props.userId])\r\n    var fullAddress = `${userData.location.street.number} ${userData.location.street.name}, ${userData.location.city} ${userData.location.state}, ${userData.location.postcode}`\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Card>\r\n                <Card.Img variant=\"top\" src={userData.picture.large} />\r\n                <Card.Body>\r\n                    <Card.Title>{userData.name.first} {userData.name.last}</Card.Title>\r\n                </Card.Body>\r\n                <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem><FaEnvelope /> {userData.email}</ListGroupItem>\r\n                    <ListGroupItem><FaAddressCard /> {fullAddress}</ListGroupItem>\r\n                    <ListGroupItem><FaPhone /> {userData.phone ? userData.phone : userData.cell}</ListGroupItem>\r\n                    <ListGroupItem><FaBirthdayCake /> {moment(userData.dob.date).format('MMMM DD, YYYY')}</ListGroupItem>\r\n                </ListGroup>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetails;","import Home from './components/home/home'\r\nimport About from './components/about/about'\r\nimport UserDetails from './components/user-details/userdetails'\r\n\r\nconst routes = {\r\n    \"/\": () => (data, setUserData) => <Home data={data} setUserData={setUserData}/>,\r\n    \"/about\": () => () => <About />,\r\n    \"/user/:id\": ({id}) => (user) => <UserDetails userId={id} user={user} />\r\n}\r\nexport default routes","import React, { useState } from 'react'\nimport {useRoutes} from 'hookrouter'\nimport NavigationBar from './components/nav-bar/navbar'\nimport NoPageFound from './components/no-page-found/nopagefound'\nimport routes from './router'\n\nconst App = () => {\n  const [userData, setUserData] = useState()\n  const routeResult = useRoutes(routes)\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      { routeResult(userData, setUserData) || <NoPageFound /> }\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}